@import "../abstracts/animations";

.home-wrapper {
  position: relative;
  border: 2px green solid;
  width: inherit;
  height: inherit;
  @include center(row, flex-start);
}
.silhouette,
.welcome-animation {
  position: absolute;
}

.silhouette {
  width: 10vw;
  height: 10vw;
  background: $background-gradient-flipped;
  border: violet 1px solid;
  border-radius: 50%;
  left: 20vw;
}

.welcome-animation {
  // border: 2px red solid;
  width: 35vw;
  height: 80vh;
  align-self: flex-end;
  z-index: -1;
  display: grid;
  grid-template-rows: repeat($line-count, 1fr);
  grid-template-columns: 1fr;
  .line {
    background-color: $fontColor;
    // border: khaki 1px solid;
  }
}

// For loop to randomize values for each div bar
@for $i from 1 through $line-count {
  .line:nth-child(#{$i}) {
    background: $blue;
    border-top-right-radius: 3rem;
    border-bottom-right-radius: 3rem;
    width: random(20) + 10 + vw;
    transform-origin: 0 0;
    animation-name: move;
    animation-duration: random(2) + 2 + s;
    animation-delay: random(3) - 1 + s;
    animation-iteration-count: infinite;
    animation-direction: normal;
    animation-timing-function: cubic-bezier(0, 0.1, 0.795, 0.5);
    animation-play-state: running;
  }
}

.hero {
  @include center();
  margin-left: 45vw;
}
.hero-text {
  height: 25vh;
  width: 40vw;
  @include center(column, space-evenly, flex-start);
  border: 2px black solid;
  h1 {
    margin-bottom: 2rem;
  }
  .swoosh-text {
    // border: blue 2px solid;
    margin-top: 5px;
    display: inline-block;
    width: auto;
    height: 55px;
    overflow: hidden;
    p {
      padding-top: 14px;
      margin-bottom: 2px;
      animation: swoosh 5s infinite alternate linear 0.5s;
    }
    .last-text {
      padding-bottom: 5px;
    }
  }
}

// issues
// it's really hard to get the cubic bezier right, the second one was the best I got but still wasn't ideal
// cubic-bezier(0.1, 1, 0.5, 0.1)
// cubic-bezier(0.28, 0.92, 0.67, 0.29)
